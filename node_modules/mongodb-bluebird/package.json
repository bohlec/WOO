{
  "name": "mongodb-bluebird",
  "version": "0.0.3",
  "description": "A simple package mongodb promise",
  "main": "./lib",
  "scripts": {
    "start": "node ./lib/index.js",
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/pradel/mongodb-bluebird"
  },
  "keywords": [
    "mongo",
    "mongodb",
    "bluebird",
    "promise"
  ],
  "author": {
    "name": "LÃ©o Pradel"
  },
  "dependencies": {
    "mongodb": "^1.4.23",
    "bluebird": "^2.3.11",
    "check-types": "^1.4.0"
  },
  "readme": "# mongodb-bluebird\n\nAdd promise to the [node-mongodb-native](https://github.com/mongodb/node-mongodb-native).\n\n## Installation\n\n```\nnpm install mongodb-bluebird\n```\n\n## Quick examples\n\n```\nvar mongo = require('mongodb-bluebird');\n//open connection to the database\nmongo.connect(\"mongodb://localhost:27017/mongodb-bluebird\").then(function(db) {\n    //close connection to the database\n    return db.close().then(function() {\n        console.log('success');\n    });\n}).catch(function(err) {\n  console.error(\"something went wrong\");\n});\n\n//find users\nmongo.connect(\"mongodb://localhost:27017/mongodb-bluebird\").then(function(db) {\n    //get the user collection\n    var users = db.collection('users');\n    return users.find().then(function(users) {\n        console.log(users);\n    }).catch(function(err) {\n        console.error(\"something went wrong\");\n    });\n});\n\n//find one user\nusers.findOne().then(function(user) {\n    console.log(user);\n});\n\n//find by id\nusers.findById('507f191e810c19729de860ea').then(function(user) {\n    console.log(user);\n});\n```\n\n### Get a collection\n\n```\nvar users = db.collection('users');\n```\n\nThe _id field will be automatically converted into ObjectId.\nIf you want to convert automatically some other fields into ObjectId just pass an array as second parameter :\n\n```\nvar users = db.collection('users', {\n\tObjectIds: [your fields]\n});\n```\n\n\n## API\n\n###Collection\n[MongoDB Collection](http://mongodb.github.io/node-mongodb-native/api-generated/collection.html)\n[MongoDB Queries](http://mongodb.github.io/node-mongodb-native/markdown-docs/queries.html)\n\n* `find([query][, fields][, options])`\n* `findOne([query][, fields][, options])`\n* `findById(oid[, fields][, options])`\n* `insert(docs[, options])`\n* `update(query, document[, options])`\n* `updateById(oid, document[, options])`\n* `remove([query][, options])`\n* `removeById(oid[, options])`\n* `count([query][, options])`\n* `save([doc][, options])`\n* `findAndModify(query, sort, doc[, options])`\n* `findAndRemove(query, sort[, options])`\n* `drop()`\n* `rename(newName[, options])`\n* `createIndex(fieldOrSpec[, options])`\n* `ensureIndex(fieldOrSpec[, options])`\n* `dropIndex(name)`\n\n###Db\n[MongoDB Db](http://mongodb.github.io/node-mongodb-native/api-generated/db.html)\n\n* `close()`\n* `admin()`\n* `collectionNames([collectionName][, options])`\n* `collections()`\n* `eval(code[, parameters][, options])`\n* `logout()`\n* `authenticate(username, password[, options])`\n* `addUser(username, password[, options])`\n* `removeUser(username[, options])`\n* `createCollection(collectionName[, options])`\n* `dropCollection(collectionName)`\n* `renameCollection(fromCollection, toCollection[, options])`\n* `dropDatabase()`\n* `stats([, options])`\n\n##TODO\n\n* Write some tests\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/pradel/mongodb-bluebird/issues"
  },
  "homepage": "https://github.com/pradel/mongodb-bluebird",
  "_id": "mongodb-bluebird@0.0.3",
  "_shasum": "501584e76984a0dd30c5af8812eb0de678a6f413",
  "_from": "mongodb-bluebird@",
  "_resolved": "https://registry.npmjs.org/mongodb-bluebird/-/mongodb-bluebird-0.0.3.tgz"
}
